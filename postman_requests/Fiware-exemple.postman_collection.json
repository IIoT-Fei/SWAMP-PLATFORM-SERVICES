{
	"info": {
		"_postman_id": "a12844a1-9669-47be-a248-773e67e97313",
		"name": "Fiware-exemple",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Orion",
			"item": [
				{
					"name": "Orion Info",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:1026/version",
							"host": [
								"localhost"
							],
							"port": "1026",
							"path": [
								"version"
							]
						}
					},
					"response": []
				},
				{
					"name": "Orion Create Entity",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "fiware-service",
								"value": "iot_lab",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"Room2\",\n  \"type\": \"Room\",\n  \"temperature\": {\n    \"value\": 23,\n    \"type\": \"Float\"\n  },\n  \"pressure\": {\n    \"value\": 720,\n    \"type\": \"Integer\"\n  }\n}"
						},
						"url": {
							"raw": "localhost:1026/v2/entities/",
							"host": [
								"localhost"
							],
							"port": "1026",
							"path": [
								"v2",
								"entities",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Orion create subscription",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "fiware-service",
								"value": "iot_lab",
								"type": "text"
							},
							{
								"key": "fiware-servicepath",
								"value": "/",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "    {\n        \"description\": \"Test subscription\",\n        \"subject\": {\n            \"entities\": [\n            {\n                \"id\": \"urn:ngsi-ld:Probe:Probe111\",\n                \"type\": \"Probe\"\n            }\n            ],\n            \"condition\": {\n                \"attrs\": [\n                \"temperature\"\n                ]\n            }\n        },\n        \"notification\": {\n            \"httpCustom\": {\n                \"url\": \"http://quantumleap:8668/v2/notify\"\n            },\n            \"attrs\": [\n            \"temperature\"\n            ],\n            \"metadata\": [\"dateCreated\", \"dateModified\"]\n        },\n        \"throttling\": 5\n    }"
						},
						"url": {
							"raw": "localhost:1026/v2/subscriptions",
							"host": [
								"localhost"
							],
							"port": "1026",
							"path": [
								"v2",
								"subscriptions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Orion get all subscriptions",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "fiware-service",
								"value": "iot_lab",
								"type": "text"
							},
							{
								"key": "fiware-servicepath",
								"value": "/",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:1026/v2/subscriptions/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "1026",
							"path": [
								"v2",
								"subscriptions",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Orion query an entity",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "fiware-service",
								"value": "iot_lab",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{orion}}/v2/entities/urn:ngsi-ld:Probe:Probe111/attrs/temperature/",
							"host": [
								"{{orion}}"
							],
							"path": [
								"v2",
								"entities",
								"urn:ngsi-ld:Probe:Probe111",
								"attrs",
								"temperature",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Orion query entity option keyvalues",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "fiware-service",
								"value": "iot_lab"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{orion}}/v2/entities/urn:ngsi-ld:Probe:Probe111/attrs/temperature/",
							"host": [
								"{{orion}}"
							],
							"path": [
								"v2",
								"entities",
								"urn:ngsi-ld:Probe:Probe111",
								"attrs",
								"temperature",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "GET All Entities Registered by Orion",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "fiware-service",
								"value": "iot_lab"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{orion}}/v2/entities",
							"host": [
								"{{orion}}"
							],
							"path": [
								"v2",
								"entities"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Quantum Leap",
			"item": [
				{
					"name": "Quantum Leap get time series data",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "fiware-service",
								"value": "iot_lab",
								"type": "text"
							},
							{
								"key": "fiware-servicepath",
								"value": "/",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:8668/v2/entities/urn:ngsi-ld:Probe:Probe111/attrs/temperature",
							"host": [
								"localhost"
							],
							"port": "8668",
							"path": [
								"v2",
								"entities",
								"urn:ngsi-ld:Probe:Probe111",
								"attrs",
								"temperature"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "IoT-Agent JSON",
			"item": [
				{
					"name": "IoT-Agent Device Operations ",
					"item": [
						{
							"name": "IoT-Agent  - Delete a Provisioned Device",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "fiware-service",
										"value": "iot_lab"
									},
									{
										"key": "fiware-servicepath",
										"value": "/"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:4041/iot/devices/Probe112",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4041",
									"path": [
										"iot",
										"devices",
										"Probe112"
									]
								},
								"description": "This example removes a provisioned device by making a DELETE request to the `/iot/services/<device-id>` endpoint.\n\nThe device attributes will no longer be mapped and commands can no longer be sent to the device.\nIf the device is making active measurements, they will still be handled with default values\nif the associated service has not been deleted."
							},
							"response": []
						},
						{
							"name": "IoT-Agent  - Read Provisioned Device Details",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "fiware-service",
										"value": "iot_lab"
									},
									{
										"key": "fiware-servicepath",
										"value": "/"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:4041/iot/devices/Probe111",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4041",
									"path": [
										"iot",
										"devices",
										"Probe111"
									]
								},
								"description": "This example obtains the full details of a provisioned device with a given `<device-id>` path.\n\nThe response includes all the commands and attributes mappings associated with the device\n\nProvisioned Device details can be read by making a GET request to the `/iot/devices/<device-id>` endpoint."
							},
							"response": []
						},
						{
							"name": "IoT-Agent List all Provisioned Devices",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "fiware-service",
										"value": "iot_lab"
									},
									{
										"key": "fiware-servicepath",
										"value": "/"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:4041/iot/devices",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4041",
									"path": [
										"iot",
										"devices"
									]
								},
								"description": "This example lists all provisioned devices by making a GET request to the `/iot/devices` endpoint.\n\nThe response includes all the commands and attributes mappings associated with all devices"
							},
							"response": []
						},
						{
							"name": "IoT -Agente create device",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "fiware-service",
										"value": "iot_lab",
										"type": "text"
									},
									{
										"key": "fiware-servicepath",
										"value": "/",
										"type": "text"
									},
									{
										"key": "Cache-Control",
										"value": " no-cache",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"devices\": [\n        {\n            \"device_id\": \"Probe112\",\n            \"entity_name\": \"urn:ngsi-ld:Probe:Probe112\",\n            \"entity_type\": \"Probe\",\n            \"attributes\": [\n                {\n                    \"name\": \"temperature\",\n                    \"type\": \"Number\"\n                },\n                {\n                \t\"name\": \"humidity\",\n                    \"type\": \"Number\"\n                },\n                {\n                    \"name\": \"@context\",\n                    \"type\": \"@context\"\n                }\n            ]\n        }\n    ]\n}"
								},
								"url": {
									"raw": "http://localhost:4041/iot/devices",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4041",
									"path": [
										"iot",
										"devices"
									]
								}
							},
							"response": []
						},
						{
							"name": "IoT-Agent update device",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "fiware-service",
										"value": "iot_lab"
									},
									{
										"key": "fiware-servicepath",
										"value": "/mgmtzone1"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"temperature\": 3.30\n}"
								},
								"url": {
									"raw": "http://localhost:7896/iot/json?i=Probe111&k=key123",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "7896",
									"path": [
										"iot",
										"json"
									],
									"query": [
										{
											"key": "i",
											"value": "Probe111"
										},
										{
											"key": "k",
											"value": "key123"
										}
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "IoT-Agent Json info",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:4041/iot/about",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4041",
							"path": [
								"iot",
								"about"
							]
						}
					},
					"response": []
				},
				{
					"name": "IoT Agent - Create a Service Group",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "fiware-service",
								"value": "iot_lab"
							},
							{
								"key": "fiware-servicepath",
								"value": "/"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n \"services\": [\n   {\n     \"apikey\":      \"key123\",\n     \"cbroker\":     \"http://orion:1026\",\n     \"entity_type\": \"Thing\",\n     \"resource\":    \"/iot/json\"\n   }\n ]\n}"
						},
						"url": {
							"raw": "http://localhost:4041/iot/services",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4041",
							"path": [
								"iot",
								"services"
							]
						},
						"description": "Invoking group provision is always the the first step in connecting devices since it is always necessary to\nsupply an authentication key with each measurement and the IoT Agent will not initially know which URL \nthe context broker is responding on.\n\nIt is possible to set up default commands and attributes for all devices as well, but this\nis not done within this tutorial as we will be provisioning each device separately.\n\nThis example provisions an anonymous group of devices. It tells the IoT Agent that a series of devices\nwill be sending messages to the `IOTA_HTTP_PORT` (where the IoT Agent is listening for **Northbound** communications)\n\nIn the example the IoT Agent is informed that the `/iot/d` endpoint will be used and that devices will authenticate\nthemselves by including the token `4jggokgpepnvsb2uv4s40d59ov`. For an UltraLight IoT Agent this means devices will\nbe sending GET or POST requests to: \n\n```\nhttp://iot-agent:7896/iot/d?i=<device_id>&k=4jggokgpepnvsb2uv4s40d59ov\n```\n\nWhich should be familiar UltraLight 2.0 syntax from the previous tutorial.\n\nWhen a measurement from an IoT device is received on the resource url it needs to be interpreted and passed\nto the context broker. The `entity_type` attribute provides a default `type` for each device which has made a \nrequest (in this case anonymous devices will be known as `Thing` entities. Furthermore the location of the \ncontext broker is required, so that the IoT Agent can pass on any measurements received to the correct location."
					},
					"response": []
				},
				{
					"name": "IoT-Agent - GET Service Group",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "fiware-service",
								"value": "iot_lab",
								"type": "text"
							},
							{
								"key": "fiware-servicepath",
								"value": "/",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:4041/iot/services",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4041",
							"path": [
								"iot",
								"services"
							],
							"query": [
								{
									"key": "fiware-service",
									"value": "iot_lab",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "NGSI-LD Wrapper",
			"item": [
				{
					"name": "NGSI-LD Wrapper version",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:1030/version",
							"host": [
								"localhost"
							],
							"port": "1030",
							"path": [
								"version"
							]
						}
					},
					"response": []
				},
				{
					"name": "NGSI-LD Wrapper configuration",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:1030/configuration",
							"host": [
								"localhost"
							],
							"port": "1030",
							"path": [
								"configuration"
							]
						}
					},
					"response": []
				},
				{
					"name": "NGSI-LD  Wrapper Create Entity",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/ld+json",
								"type": "text"
							},
							{
								"key": "fiware-service",
								"value": "iot_lab",
								"type": "text"
							},
							{
								"key": "fiware-servicepath",
								"value": "/",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n      \"id\": \"urn:ngsi-ld:Place:IoT_LAB_FEI\",\n      \"type\": \"Place\",\n      \"@context\": [\n    \t\"https://fiware.github.io/NGSI-LD_Tests/ldContext/testFullContext.jsonld\"\n      ]\n}"
						},
						"url": {
							"raw": "localhost:1030/ngsi-ld/v1/entities/",
							"host": [
								"localhost"
							],
							"port": "1030",
							"path": [
								"ngsi-ld",
								"v1",
								"entities",
								""
							]
						}
					},
					"response": []
				}
			]
		}
	]
}